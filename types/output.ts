// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetHostInterface {
    /**
     * Interface DNS name
     */
    dns?: string;
    /**
     * Interface ID (internally generated)
     */
    id: string;
    /**
     * Interface IP address
     */
    ip?: string;
    /**
     * Primary interface of this type
     */
    main?: boolean;
    /**
     * Destination Port
     */
    port: number;
    /**
     * Authentication Passphrase (v3 only)
     */
    snmp3Authpassphrase?: string;
    /**
     * Authentication Protocol (v3 only), one of: md5, sha
     */
    snmp3Authprotocol?: string;
    /**
     * Context Name (v3 only)
     */
    snmp3Contextname?: string;
    /**
     * Priv Passphrase (v3 only)
     */
    snmp3Privpassphrase?: string;
    /**
     * Priv Protocol (v3 only), one of: des, aes
     */
    snmp3Privprotocol?: string;
    /**
     * Security Level (v3 only), one of: noauthnopriv, authnopriv, authpriv
     */
    snmp3Securitylevel?: string;
    /**
     * Security Name (v3 only)
     */
    snmp3Securityname?: string;
    /**
     * SNMP Bulk
     */
    snmpBulk?: boolean;
    /**
     * HSNMP Community (v1/v2 only)
     */
    snmpCommunity?: string;
    /**
     * SNMP Version, one of: 1, 2, 3
     */
    snmpVersion?: string;
    /**
     * Interface type
     */
    type?: string;
}

export interface GetHostInventory {
    /**
     * Inventory alias
     */
    alias?: string;
    /**
     * Inventory asset_tag
     */
    assetTag?: string;
    /**
     * Inventory chassis
     */
    chassis?: string;
    /**
     * Inventory contact
     */
    contact?: string;
    /**
     * Inventory contract_number
     */
    contractNumber?: string;
    /**
     * Inventory date_hw_decomm
     */
    dateHwDecomm?: string;
    /**
     * Inventory date_hw_expiry
     */
    dateHwExpiry?: string;
    /**
     * Inventory date_hw_install
     */
    dateHwInstall?: string;
    /**
     * Inventory date_hw_purchase
     */
    dateHwPurchase?: string;
    /**
     * Inventory deployment_status
     */
    deploymentStatus?: string;
    /**
     * Inventory hardware
     */
    hardware?: string;
    /**
     * Inventory hardware_full
     */
    hardwareFull?: string;
    /**
     * Inventory host_netmask
     */
    hostNetmask?: string;
    /**
     * Inventory host_networks
     */
    hostNetworks?: string;
    /**
     * Inventory host_router
     */
    hostRouter?: string;
    /**
     * Inventory hw_arch
     */
    hwArch?: string;
    /**
     * Inventory installer_name
     */
    installerName?: string;
    /**
     * Inventory location
     */
    location?: string;
    /**
     * Inventory location_lat
     */
    locationLat?: string;
    /**
     * Inventory location_lon
     */
    locationLon?: string;
    /**
     * Inventory macaddress_a
     */
    macaddressA?: string;
    /**
     * Inventory macaddress_b
     */
    macaddressB?: string;
    /**
     * Inventory model
     */
    model?: string;
    /**
     * Inventory name
     */
    name?: string;
    /**
     * Inventory notes
     */
    notes?: string;
    /**
     * Inventory oob_ip
     */
    oobIp?: string;
    /**
     * Inventory oob_netmask
     */
    oobNetmask?: string;
    /**
     * Inventory oob_router
     */
    oobRouter?: string;
    /**
     * Inventory os
     */
    os?: string;
    /**
     * Inventory os_full
     */
    osFull?: string;
    /**
     * Inventory os_short
     */
    osShort?: string;
    /**
     * Inventory poc_1_cell
     */
    poc1Cell?: string;
    /**
     * Inventory poc_1_email
     */
    poc1Email?: string;
    /**
     * Inventory poc_1_name
     */
    poc1Name?: string;
    /**
     * Inventory poc_1_notes
     */
    poc1Notes?: string;
    /**
     * Inventory poc_1_phone_a
     */
    poc1PhoneA?: string;
    /**
     * Inventory poc_1_phone_b
     */
    poc1PhoneB?: string;
    /**
     * Inventory poc_1_screen
     */
    poc1Screen?: string;
    /**
     * Inventory poc_2_cell
     */
    poc2Cell?: string;
    /**
     * Inventory poc_2_email
     */
    poc2Email?: string;
    /**
     * Inventory poc_2_name
     */
    poc2Name?: string;
    /**
     * Inventory poc_2_notes
     */
    poc2Notes?: string;
    /**
     * Inventory poc_2_phone_a
     */
    poc2PhoneA?: string;
    /**
     * Inventory poc_2_phone_b
     */
    poc2PhoneB?: string;
    /**
     * Inventory poc_2_screen
     */
    poc2Screen?: string;
    /**
     * Inventory serialno_a
     */
    serialnoA?: string;
    /**
     * Inventory serialno_b
     */
    serialnoB?: string;
    /**
     * Inventory site_address_a
     */
    siteAddressA?: string;
    /**
     * Inventory site_address_b
     */
    siteAddressB?: string;
    /**
     * Inventory site_address_c
     */
    siteAddressC?: string;
    /**
     * Inventory site_city
     */
    siteCity?: string;
    /**
     * Inventory site_country
     */
    siteCountry?: string;
    /**
     * Inventory site_notes
     */
    siteNotes?: string;
    /**
     * Inventory site_rack
     */
    siteRack?: string;
    /**
     * Inventory site_state
     */
    siteState?: string;
    /**
     * Inventory site_zip
     */
    siteZip?: string;
    /**
     * Inventory software
     */
    software?: string;
    /**
     * Inventory software_app_a
     */
    softwareAppA?: string;
    /**
     * Inventory software_app_b
     */
    softwareAppB?: string;
    /**
     * Inventory software_app_c
     */
    softwareAppC?: string;
    /**
     * Inventory software_app_d
     */
    softwareAppD?: string;
    /**
     * Inventory software_app_e
     */
    softwareAppE?: string;
    /**
     * Inventory software_full
     */
    softwareFull?: string;
    /**
     * Inventory tag
     */
    tag?: string;
    /**
     * Inventory type
     */
    type?: string;
    /**
     * Inventory type_full
     */
    typeFull?: string;
    /**
     * Inventory url_a
     */
    urlA?: string;
    /**
     * Inventory url_b
     */
    urlB?: string;
    /**
     * Inventory url_c
     */
    urlC?: string;
    /**
     * Inventory vendor
     */
    vendor?: string;
}

export interface GetHostMacro {
    id: string;
    /**
     * Macro Name (key)
     */
    name: string;
    /**
     * Macro Value
     */
    value: string;
}

export interface GetHostTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface GetTemplateMacro {
    id: string;
    /**
     * Macro Name (key)
     */
    name: string;
    /**
     * Macro Value
     */
    value: string;
}

export interface GraphItem {
    /**
     * color
     */
    color: string;
    /**
     * Draw Type, one of: line, filled, bold, dot, dashed, gradient
     */
    drawtype?: string;
    /**
     * Function, one of: average, max, all, last, min
     */
    function?: string;
    id: string;
    /**
     * itemid
     */
    itemid: string;
    /**
     * sort order
     */
    sortorder?: string;
    /**
     * Type, one of: simple, sum
     */
    type?: string;
    /**
     * Y Axis Side, one of: left, right
     */
    yaxisSide?: string;
}

export interface HostInterface {
    /**
     * Interface DNS name
     */
    dns?: string;
    /**
     * Interface ID (internally generated)
     */
    id: string;
    /**
     * Interface IP address
     */
    ip?: string;
    /**
     * Primary interface of this type
     */
    main?: boolean;
    /**
     * Destination Port
     */
    port: number;
    /**
     * Authentication Passphrase (v3 only)
     */
    snmp3Authpassphrase?: string;
    /**
     * Authentication Protocol (v3 only), one of: md5, sha
     */
    snmp3Authprotocol?: string;
    /**
     * Context Name (v3 only)
     */
    snmp3Contextname?: string;
    /**
     * Priv Passphrase (v3 only)
     */
    snmp3Privpassphrase?: string;
    /**
     * Priv Protocol (v3 only), one of: des, aes
     */
    snmp3Privprotocol?: string;
    /**
     * Security Level (v3 only), one of: noauthnopriv, authnopriv, authpriv
     */
    snmp3Securitylevel?: string;
    /**
     * Security Name (v3 only)
     */
    snmp3Securityname?: string;
    /**
     * SNMP Bulk
     */
    snmpBulk?: boolean;
    /**
     * HSNMP Community (v1/v2 only)
     */
    snmpCommunity?: string;
    /**
     * SNMP Version, one of: 1, 2, 3
     */
    snmpVersion?: string;
    /**
     * Interface type
     */
    type?: string;
}

export interface HostInventory {
    /**
     * Inventory alias
     */
    alias?: string;
    /**
     * Inventory asset_tag
     */
    assetTag?: string;
    /**
     * Inventory chassis
     */
    chassis?: string;
    /**
     * Inventory contact
     */
    contact?: string;
    /**
     * Inventory contract_number
     */
    contractNumber?: string;
    /**
     * Inventory date_hw_decomm
     */
    dateHwDecomm?: string;
    /**
     * Inventory date_hw_expiry
     */
    dateHwExpiry?: string;
    /**
     * Inventory date_hw_install
     */
    dateHwInstall?: string;
    /**
     * Inventory date_hw_purchase
     */
    dateHwPurchase?: string;
    /**
     * Inventory deployment_status
     */
    deploymentStatus?: string;
    /**
     * Inventory hardware
     */
    hardware?: string;
    /**
     * Inventory hardware_full
     */
    hardwareFull?: string;
    /**
     * Inventory host_netmask
     */
    hostNetmask?: string;
    /**
     * Inventory host_networks
     */
    hostNetworks?: string;
    /**
     * Inventory host_router
     */
    hostRouter?: string;
    /**
     * Inventory hw_arch
     */
    hwArch?: string;
    /**
     * Inventory installer_name
     */
    installerName?: string;
    /**
     * Inventory location
     */
    location?: string;
    /**
     * Inventory location_lat
     */
    locationLat?: string;
    /**
     * Inventory location_lon
     */
    locationLon?: string;
    /**
     * Inventory macaddress_a
     */
    macaddressA?: string;
    /**
     * Inventory macaddress_b
     */
    macaddressB?: string;
    /**
     * Inventory model
     */
    model?: string;
    /**
     * Inventory name
     */
    name?: string;
    /**
     * Inventory notes
     */
    notes?: string;
    /**
     * Inventory oob_ip
     */
    oobIp?: string;
    /**
     * Inventory oob_netmask
     */
    oobNetmask?: string;
    /**
     * Inventory oob_router
     */
    oobRouter?: string;
    /**
     * Inventory os
     */
    os?: string;
    /**
     * Inventory os_full
     */
    osFull?: string;
    /**
     * Inventory os_short
     */
    osShort?: string;
    /**
     * Inventory poc_1_cell
     */
    poc1Cell?: string;
    /**
     * Inventory poc_1_email
     */
    poc1Email?: string;
    /**
     * Inventory poc_1_name
     */
    poc1Name?: string;
    /**
     * Inventory poc_1_notes
     */
    poc1Notes?: string;
    /**
     * Inventory poc_1_phone_a
     */
    poc1PhoneA?: string;
    /**
     * Inventory poc_1_phone_b
     */
    poc1PhoneB?: string;
    /**
     * Inventory poc_1_screen
     */
    poc1Screen?: string;
    /**
     * Inventory poc_2_cell
     */
    poc2Cell?: string;
    /**
     * Inventory poc_2_email
     */
    poc2Email?: string;
    /**
     * Inventory poc_2_name
     */
    poc2Name?: string;
    /**
     * Inventory poc_2_notes
     */
    poc2Notes?: string;
    /**
     * Inventory poc_2_phone_a
     */
    poc2PhoneA?: string;
    /**
     * Inventory poc_2_phone_b
     */
    poc2PhoneB?: string;
    /**
     * Inventory poc_2_screen
     */
    poc2Screen?: string;
    /**
     * Inventory serialno_a
     */
    serialnoA?: string;
    /**
     * Inventory serialno_b
     */
    serialnoB?: string;
    /**
     * Inventory site_address_a
     */
    siteAddressA?: string;
    /**
     * Inventory site_address_b
     */
    siteAddressB?: string;
    /**
     * Inventory site_address_c
     */
    siteAddressC?: string;
    /**
     * Inventory site_city
     */
    siteCity?: string;
    /**
     * Inventory site_country
     */
    siteCountry?: string;
    /**
     * Inventory site_notes
     */
    siteNotes?: string;
    /**
     * Inventory site_rack
     */
    siteRack?: string;
    /**
     * Inventory site_state
     */
    siteState?: string;
    /**
     * Inventory site_zip
     */
    siteZip?: string;
    /**
     * Inventory software
     */
    software?: string;
    /**
     * Inventory software_app_a
     */
    softwareAppA?: string;
    /**
     * Inventory software_app_b
     */
    softwareAppB?: string;
    /**
     * Inventory software_app_c
     */
    softwareAppC?: string;
    /**
     * Inventory software_app_d
     */
    softwareAppD?: string;
    /**
     * Inventory software_app_e
     */
    softwareAppE?: string;
    /**
     * Inventory software_full
     */
    softwareFull?: string;
    /**
     * Inventory tag
     */
    tag?: string;
    /**
     * Inventory type
     */
    type?: string;
    /**
     * Inventory type_full
     */
    typeFull?: string;
    /**
     * Inventory url_a
     */
    urlA?: string;
    /**
     * Inventory url_b
     */
    urlB?: string;
    /**
     * Inventory url_c
     */
    urlC?: string;
    /**
     * Inventory vendor
     */
    vendor?: string;
}

export interface HostMacro {
    id: string;
    /**
     * Macro Name (key)
     */
    name: string;
    /**
     * Macro Value
     */
    value: string;
}

export interface HostTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemAgentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemAgentTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemAggregatePreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemAggregateTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemCalculatedPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemCalculatedTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemDependentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemDependentTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemExternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemExternalTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemHttpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemHttpTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemInternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemInternalTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemSimplePreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemSimpleTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemSnmpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemSnmpTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemSnmptrapPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemSnmptrapTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ItemTrapperPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ItemTrapperTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface LldAgentCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldAgentMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldAgentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldDependentCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldDependentMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldDependentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldExternalCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldExternalMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldExternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldHttpCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldHttpMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldHttpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldInternalCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldInternalMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldInternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldSimpleCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldSimpleMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldSimplePreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldSnmpCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldSnmpMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldSnmpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface LldTrapperCondition {
    id: string;
    /**
     * Filter Macro
     */
    macro: string;
    /**
     * Operator, one of: match, notmatch
     */
    operator?: string;
    /**
     * Filter Value
     */
    value: string;
}

export interface LldTrapperMacro {
    /**
     * Macro
     */
    macro: string;
    /**
     * Macro Path
     */
    path: string;
}

export interface LldTrapperPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoGraphItem {
    /**
     * color
     */
    color: string;
    /**
     * Draw Type, one of: line, filled, bold, dot, dashed, gradient
     */
    drawtype?: string;
    /**
     * Function, one of: average, max, all, last, min
     */
    function?: string;
    id: string;
    /**
     * itemid
     */
    itemid: string;
    /**
     * sort order
     */
    sortorder?: string;
    /**
     * Type, one of: simple, sum
     */
    type?: string;
    /**
     * Y Axis Side, one of: left, right
     */
    yaxisSide?: string;
}

export interface ProtoItemAgentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemAgentTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemAggregatePreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemAggregateTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemCalculatedPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemCalculatedTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemDependentPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemDependentTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemExternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemExternalTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemHttpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemHttpTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemInternalPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemInternalTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemSimplePreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemSimpleTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemSnmpPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemSnmpTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemSnmptrapPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemSnmptrapTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoItemTrapperPreprocessor {
    errorHandler?: string;
    errorHandlerParams?: string;
    id: string;
    /**
     * Preprocessor parameters
     */
    params?: string[];
    /**
     * Preprocessor type, zabbix identifier number
     */
    type: string;
}

export interface ProtoItemTrapperTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface ProtoTriggerTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

export interface TemplateMacro {
    id: string;
    /**
     * Macro Name (key)
     */
    name: string;
    /**
     * Macro Value
     */
    value: string;
}

export interface TriggerTag {
    /**
     * Tag Key
     */
    key: string;
    /**
     * Tag Value
     */
    value?: string;
}

