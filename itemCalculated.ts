// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ItemCalculated extends pulumi.CustomResource {
    /**
     * Get an existing ItemCalculated resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ItemCalculatedState, opts?: pulumi.CustomResourceOptions): ItemCalculated {
        return new ItemCalculated(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zabbix:index/itemCalculated:ItemCalculated';

    /**
     * Returns true if the given object is an instance of ItemCalculated.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ItemCalculated {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ItemCalculated.__pulumiType;
    }

    /**
     * Application IDs to associate this item with
     */
    public readonly applications!: pulumi.Output<string[] | undefined>;
    /**
     * Item Delay period
     */
    public readonly delay!: pulumi.Output<string | undefined>;
    /**
     * Formula
     */
    public readonly formula!: pulumi.Output<string>;
    /**
     * Item History
     */
    public readonly history!: pulumi.Output<string | undefined>;
    /**
     * Host ID
     */
    public readonly hostid!: pulumi.Output<string>;
    /**
     * Item KEY
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Item Name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly preprocessors!: pulumi.Output<outputs.ItemCalculatedPreprocessor[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.ItemCalculatedTag[] | undefined>;
    /**
     * Item Trends
     */
    public readonly trends!: pulumi.Output<string>;
    /**
     * Item Value Type, one of: float, character, log, unsigned, text
     */
    public readonly valuetype!: pulumi.Output<string>;

    /**
     * Create a ItemCalculated resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ItemCalculatedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ItemCalculatedArgs | ItemCalculatedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ItemCalculatedState | undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["delay"] = state ? state.delay : undefined;
            resourceInputs["formula"] = state ? state.formula : undefined;
            resourceInputs["history"] = state ? state.history : undefined;
            resourceInputs["hostid"] = state ? state.hostid : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["preprocessors"] = state ? state.preprocessors : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trends"] = state ? state.trends : undefined;
            resourceInputs["valuetype"] = state ? state.valuetype : undefined;
        } else {
            const args = argsOrState as ItemCalculatedArgs | undefined;
            if ((!args || args.formula === undefined) && !opts.urn) {
                throw new Error("Missing required property 'formula'");
            }
            if ((!args || args.hostid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostid'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.valuetype === undefined) && !opts.urn) {
                throw new Error("Missing required property 'valuetype'");
            }
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["delay"] = args ? args.delay : undefined;
            resourceInputs["formula"] = args ? args.formula : undefined;
            resourceInputs["history"] = args ? args.history : undefined;
            resourceInputs["hostid"] = args ? args.hostid : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preprocessors"] = args ? args.preprocessors : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trends"] = args ? args.trends : undefined;
            resourceInputs["valuetype"] = args ? args.valuetype : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ItemCalculated.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ItemCalculated resources.
 */
export interface ItemCalculatedState {
    /**
     * Application IDs to associate this item with
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Item Delay period
     */
    delay?: pulumi.Input<string>;
    /**
     * Formula
     */
    formula?: pulumi.Input<string>;
    /**
     * Item History
     */
    history?: pulumi.Input<string>;
    /**
     * Host ID
     */
    hostid?: pulumi.Input<string>;
    /**
     * Item KEY
     */
    key?: pulumi.Input<string>;
    /**
     * Item Name
     */
    name?: pulumi.Input<string>;
    preprocessors?: pulumi.Input<pulumi.Input<inputs.ItemCalculatedPreprocessor>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ItemCalculatedTag>[]>;
    /**
     * Item Trends
     */
    trends?: pulumi.Input<string>;
    /**
     * Item Value Type, one of: float, character, log, unsigned, text
     */
    valuetype?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ItemCalculated resource.
 */
export interface ItemCalculatedArgs {
    /**
     * Application IDs to associate this item with
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Item Delay period
     */
    delay?: pulumi.Input<string>;
    /**
     * Formula
     */
    formula: pulumi.Input<string>;
    /**
     * Item History
     */
    history?: pulumi.Input<string>;
    /**
     * Host ID
     */
    hostid: pulumi.Input<string>;
    /**
     * Item KEY
     */
    key: pulumi.Input<string>;
    /**
     * Item Name
     */
    name?: pulumi.Input<string>;
    preprocessors?: pulumi.Input<pulumi.Input<inputs.ItemCalculatedPreprocessor>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ItemCalculatedTag>[]>;
    /**
     * Item Trends
     */
    trends?: pulumi.Input<string>;
    /**
     * Item Value Type, one of: float, character, log, unsigned, text
     */
    valuetype: pulumi.Input<string>;
}
